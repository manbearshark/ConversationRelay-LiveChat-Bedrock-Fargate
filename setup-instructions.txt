This project can be used in two modes:

1. As a standalone development instance using a local Docker image.  
2. As a cloud-deployed server for production.

LOCAL DEPLOYMENT:

The local Docker instance will still need to call out to DynamoDB and Bedrock in the cloud.

When developing locally, you will need to supply a WSS and HTTPS endpoint for Twilio to reach your local machine.

We recommend ngrok.  

Start your ngrok enpoint and point it at your local machine on port 3000 (this is the default set for your local Docker image).

Copy the https and wss endpoints ngrok gives you.

Deploy Bedrock CloudWatch logs and cloud DynamoDB table for the application:

sam build --template-file local-dev-cloud-infra-template.yml
sam deploy --stack-name CR-local --template-file local-dev-cloud-infra-template.yml --guided

Modify the docker-compose.yml file on the following lines:

- INFERENCE_PROFILE_ARN=us.anthropic.claude-3-5-sonnet-20240620-v1:0 # This can be an ARN or a cross-region profie
- TABLE_NAME=CR-local-ConversationRelayAppDatabase
- AWS_REGION=us-east-1
- STACK_USE_CASE=restaurantOrderingUseCase
# THERE MUST BE A SLASH AT THE END OF THE URL - TWILIO DOES NOT LIKE IT WITHOUT IT
- WS_URL=wss://<YOUR NGROK ENDPOINT>

Then build your local Docker image, using `docker-compose build`.

And launch your local image `docker-compose up`.

Make sure that your Twilio phone number webhook endpoint is set to the HTTP address from ngrok.  

CLOUD DEPLOYMENT:

====================================================
1) DEPLOY TEMPLATE
====================================================
Run `sam build` from this directory every time before deploying.

Run 
sam build --template-file cloud-deploy-infra-template.yml
sam deploy --guided --stack-name CR-AWS-BEDROCK --template cloud-deploy-infra-template.yml --capabilities CAPABILITY_NAMED_IAM --profile ConversationRelayPrgDanBartlett 

* The first time you deploy, add `--guided` (`sam deploy --guided --stack-name...`) to the above command to generate a configuration file. All subsequent commands do not need the --guided.

====================================================
2) LINK AWS REST API ENDPOINT TO TWILIO
====================================================
Take Output from the stack called "TwimlAPI" and assign it to the Webhook for Voice handler for their desired phone number.

====================================================
3) DATA LOADING
====================================================
aws dynamodb put-item --table-name CR-AWS-BEDROCK-ConversationRelayAppDatabase --item "$(node ./configuration/dynamo-loaders/restaurantOrderingUseCase.js | cat)"

====================================================
4) ADD A PROFILE
First, edit this file [ ./configuration/dynamo-loaders/user-profile-example.json ]
with your information. The primary key is the phone number in E164
format! 
====================================================
aws dynamodb put-item --table-name CR-AWS-BEDROCK-ConversationRelayAppDatabase --item "$(node ./configuration/user-profile.js | cat)"
